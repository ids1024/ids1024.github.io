<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ids1024</title>
  <subtitle/>
  <id>http://ids1024.github.io/</id>
  <link href="http://ids1024.github.io/"/>
  <link href="http://ids1024.github.io/feed.xml" rel="self"/>
  <updated>2015-10-30T23:56:00Z</updated>
  <author>
    <name>Ian D. Scott</name>
  </author>
  <entry>
    <title>Whitaker's Words</title>
    <link rel="alternate" href="http://ids1024.github.io/2015/10/30/whitaker-s-words.html"/>
    <id>http://ids1024.github.io/2015/10/30/whitaker-s-words.html</id>
    <published>2015-10-30T23:56:00Z</published>
    <updated>2015-10-30T17:23:27-07:00</updated>
    <author>
      <name>Ian D. Scott</name>
    </author>
    <content type="html">&lt;p&gt;Well, I haven't been posting here much (or at all) have I? Well, I'll start now. Maybe. But I am writing here now anyway. &lt;a href="http://lysy2.archives.nd.edu/words.htm"&gt;Whitaker's Words&lt;/a&gt; is an interesting old command line program for analyzing the morphological form of latin words, as well as providing simple definitions. For example, here is what it outputs for the word "caesaris":&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;caesar.is            N      3 1 GEN S M&lt;br /&gt;
Caesar, Caesaris  N (3rd) M   [XLXBO]&lt;br /&gt;
Caesar; (Julian gens cognomen); (adopted by emperors); [C. Julius ~ =&amp;gt; Emperor]&lt;br /&gt;
*&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, it tells us that it is a noun, third declension, in the singular genitive, with a short definition and a couple other things. This likely is rather uninteresting if you have no interest in Latin, but if you do, it can be quite a useful tool.&lt;/p&gt;

&lt;p&gt;I noticed that, though there is an android app called Whitaker's Words, it is not really the same thing. It uses the dictionary from words, but does not do the morphological analysis, which is the main point. For dictionaries, there are better options. So I (not right now, but in September) wrote an Android app that wraps the actual words program, providing all of the functionality. Compiling was a little complicated, since it was written in ada. Naturally the Android NDK only supports C and C++, and I can't really seem to find a cross compiler for ada targeting ARM processors. I ended up using an arm chroot with qemu and building it there, after failing at attempts to build a cross compiler, but eventually got a usable binary. After that wrapping the program was fairly simple, since it is a command line tool and, though interactive, can also just be used by passing words as arguments.&lt;/p&gt;

&lt;p&gt;You can find the result on &lt;a href="https://play.google.com/store/apps/details?id=com.ids1024.whitakerswords"&gt;Google Play&lt;/a&gt; with the &lt;a href="https://github.com/ids1024/whitakers-words-android"&gt;source code&lt;/a&gt; available on Github. Hopefully people will find it useful, which does seem to be the case based on the five star ratings it has gotten. It is free, open source, ad-free and requires no permissions, because when these are not the case it annoys me (excluding permissions when they are clearly needed, of course) so I would be a hypocrite to do otherwise.&lt;/p&gt;

&lt;p&gt;Well, that is all I have to say for now. Stay tuned for another post tomorrow, the next day, or in a millennium or two!&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Static Site Generators</title>
    <link rel="alternate" href="http://ids1024.github.io/2014/05/30/static-site-generators.html"/>
    <id>http://ids1024.github.io/2014/05/30/static-site-generators.html</id>
    <published>2014-05-31T03:09:00Z</published>
    <updated>2014-05-30T20:13:34-07:00</updated>
    <author>
      <name>Ian D. Scott</name>
    </author>
    <content type="html">&lt;p&gt;There are essentially two ways to create a website. The most popular method is to use a CMS such as Drupal, Joomla, Wordpress, etc. This method allows for web-based WYSIWIG editors for site content, extensions, user login, comments, and various other features. It is also slower and less secure. Each time a page is loaded, the server must generate the page, often with a php script. There are methods to improve this, but nothing will be more efficient than plain, old fashioned, static html.&lt;/p&gt;

&lt;p&gt;Static html is also more secure. A CMS allows for login to make changes to site content. Static html has no login, and indeed no code running on the server. The server may still have security flaws, but the static html is not at fault.&lt;/p&gt;

&lt;p&gt;But static html has its own problems. Perhaps you wish to update the copyright date in your site's footer. You must change every page. If your website has five pages, this is not a problem. If it has five hundred, it might take a while, though this is a relatively trivial change. This could be remedied by php or server side includes, but this would result in the aforementioned performance issues, and possibly even insecurity.&lt;/p&gt;

&lt;p&gt;What if you could take the best features of both a CMS and static html? Perhaps you could use a form of CMS, but have it generate static html instead of rendering the page on each load. Such a thing exists, and it is called a static site generator.&lt;/p&gt;

&lt;p&gt;There are countless static site generators. I use &lt;a href="http://middlemanapp.com"&gt;Middleman&lt;/a&gt;, but there may be better ones, since I have not tried many. Middleman, like many static site generators, is implemented in Ruby. Static site generators implemented in Ruby can utilize tools designed for Ruby on Rails.&lt;/p&gt;

&lt;p&gt;There are many legitimate reasons to use a CMS, but I prefer Middleman. It also fits better into a command line workflow. And thus, I am using Middleman for this site.&lt;/p&gt;
</content>
  </entry>
</feed>
